{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f51683a0-9506-4b15-a5f7-347c4dc63f9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2\n",
    "import numpy as np\n",
    "import easyocr\n",
    "import torch\n",
    "from sklearn.cluster import KMeans\n",
    "from PIL import Image\n",
    "from io import BytesIO\n",
    "import requests\n",
    "\n",
    "# YOLO 모델 로드\n",
    "yolo_model = torch.hub.load('ultralytics/yolov5', 'yolov5s')\n",
    "\n",
    "# OCR 리더 로드\n",
    "ocr_reader = easyocr.Reader(['en', 'ko'])  # 영어 & 한글 OCR 지원\n",
    "\n",
    "# 색상 추출 함수\n",
    "def extract_colors(image, num_colors=5):\n",
    "    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB).reshape((-1, 3))\n",
    "    kmeans = KMeans(n_clusters=num_colors, n_init=\"auto\")\n",
    "    labels = kmeans.fit_predict(image)\n",
    "    palette = kmeans.cluster_centers_.astype(int)\n",
    "    \n",
    "    # 색상의 출현 빈도 계산\n",
    "    counter = np.bincount(labels)\n",
    "    total_count = np.sum(counter)\n",
    "    # 주요 색상 및 비율 저장\n",
    "    color_ratios = {tuple(palette[i]): counter[i] / total_count for i in range(len(palette))}\n",
    "    return sorted(color_ratios.items(), key=lambda x: x[1], reverse=True)\n",
    "\n",
    "# 이미지에서 텍스트 추출\n",
    "def extract_text(image, confidence_threshold=0.7):\n",
    "    results = ocr_reader.readtext(image)\n",
    "    text_info = []\n",
    "    for (bbox, text, prob) in results:\n",
    "        if prob >= confidence_threshold:\n",
    "            text_info.append({\n",
    "                \"text\": text,\n",
    "                \"probability\": prob \n",
    "            })\n",
    "    return text_info\n",
    "\n",
    "# 객체 탐지 함수\n",
    "def detect_objects(image):\n",
    "    results = yolo_model(image)\n",
    "    objects = []\n",
    "    for result in results.xyxy[0]:\n",
    "        x1, y1, x2, y2, conf, cls = map(int, result[:6])\n",
    "        label = yolo_model.names[cls]\n",
    "        objects.append({\"label\": label, \"confidence\": conf, \"bbox\": (x1, y1, x2, y2)})\n",
    "    return objects\n",
    "\n",
    "# 썸네일 분석 함수\n",
    "def analyze_image(image_url):\n",
    "    image = np.array(Image.open(BytesIO(requests.get(image_url).content)))\n",
    "    \n",
    "    # 색상 추출\n",
    "    dominant_colors = extract_colors(image)\n",
    "    \n",
    "    # 텍스트 추출\n",
    "    text_details = extract_text(image)\n",
    "    \n",
    "    # 객체 탐지\n",
    "    object_details = detect_objects(image)\n",
    "    \n",
    "    # 결과 리턴\n",
    "    return {\n",
    "        \"dominant_colors\": dominant_colors,\n",
    "        \"text_details\": text_details,\n",
    "        \"object_details\": object_details\n",
    "    }\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
